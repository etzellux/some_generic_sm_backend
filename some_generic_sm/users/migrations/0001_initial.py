# Generated by Django 4.2.1 on 2023-05-26 19:13

import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True, verbose_name='Email')),
                ('username', models.CharField(max_length=150, unique=True, validators=[django.core.validators.RegexValidator('^[a-z0-9._]{3,}$', 'Username is invalid. Only lowercase English letters, period and underscore characters are allowed. Minimum length is three characters.')], verbose_name='Username')),
                ('first_name', models.CharField(max_length=255, verbose_name='First Name')),
                ('last_name', models.CharField(blank=True, max_length=255, verbose_name='Last Name')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active Status')),
                ('is_staff', models.BooleanField(default=False, verbose_name='staff status')),
                ('profile_picture', models.ImageField(blank=True, max_length=255, null=True, upload_to='profile_pictures/%Y/%m/%d %H:%M', verbose_name='Profile Picture')),
                ('bio', models.TextField(blank=True, max_length=255, verbose_name='Bio')),
                ('signup_date', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'ordering': ('first_name', 'last_name'),
                'indexes': [models.Index(fields=['username'], name='users_user_usernam_65d164_idx')],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddConstraint(
            model_name='user',
            constraint=models.UniqueConstraint(fields=('email',), name='unique_email_constaint'),
        ),
    ]
